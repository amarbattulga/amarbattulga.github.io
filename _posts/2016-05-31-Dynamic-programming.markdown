---
layout: post
title:  "Динамик програмчлал"
date:   2016-03-07 16:24:00
categories: algorithm
---
Dynamic programming - Үүнээс цааш товчилж **DP** гэх болно

DP-г сурахын тулд бодлогийн төлөвийг тодорхойлох мөн одоогийн бодлого болон
дэд бодлого хоорондох уялдаа холбоо болон шилжилтүүдийг сайн шинжиж сурах хэрэгтэй юм.

Хэрэв бодлого:

1. Хэдэн янзын боломж байгаа вэ?
2. Үүнийг ихэсгэ?
3. Үүнийг багасга?

Дээрх үгсээс бүрдсэн байвал тухайн бодлого нь **DP** бодлого байх магадлал өндөр юм.

Гэх мэтчилэн эхлээд бодлогийг **DP** ашиглаж бодож болох эсэхийг мэдэх юм.
Энэ тийм ч амар ажил биш ба их олон бодлого бодсоны дараа өөрөө суудаг чадвар юм. 

Тиймээс уг аргийг жишээ бодлого ашиглан сурцгаая.

# Жишээ бодлого
Доорхи бодлогоор жишээ авч DP талаар дэлгэрэнгүй судалцгаая

[UVA 11450 - Wedding shopping](https://uva.onlinejudge.org/index.php?option=onlinejudge&page=show_problem&problem=2445){:target="_blank"}

#### - Дээрх бодлогийн хураангүй үгүйлбэр

Өгөгдсөн тодорхой тооны хувцаснуудын ( 3 өөр загварын өмд, 2 цамц, 10 подвалк гэх мэт ) тус бүрийнх нь үнэ нь өгөгджээ.

Бидний түрүүвчинд **M** төгрөг байгаа ба бид бүх хувцаснуудас яг нэг, нэгийг аваад хамгийн ихдээ хэдэн төгрөг үрж чадах вэ? *(Мэдээж мөнгөн дүн M-с хэтэрч болохгүй)*

C - Хувцасны тоо **C <= 20**

K - Нэг хувцасны загварынх нь тоо **K <= 20**

M - Мөнгөний хэмжээ **M <= 200**


### Бодолт 1: Шунахай бодолт **( Буруу хариулт )**
Санаа: хувцас бүрээс хамгийн үнэтэйг нь авах:

### Бодолт 2: Бүрэн хайлт **( Хугацааны хязгаарлалт )**
20^20

### Бодолт 3: Дээрээс доош DP [**( Тэнцэв )**](#){:style="color:green"}
Бид энэ бодлогийг DP ашиглаж бодож болж байна. Учир уг бодлого DP бодлогонд байдаг доорх үндсэн 2 нөхцөлийг хангажээ.

1. Бодлогийг биесээсээ хамааралгүй хэсгүүдэд хувааж болохуйц.
2. Дэд бодлогууд хоорондоо давхацаж байна. **Энэ нь динамик бодлогийн үндсэн шинж гэж хэлж болох юм.**

{% highlight cpp %}
// Бичиглэлийн алдаа байз болзошгүй

// reachable -> Хүрж болохуйц
// clothes -> Хувцаснууд

#include<bits/stdc++.h> // Нэг дор бүгдий

using namespace std;

int C, M;
vector< vector<int> > clothes;

// Оролт унших
void init(){
     // Хувцасны тоо
     cin >> C;
     clothes.resize(C);

     // Үнэ
     for (int i=0; i<C; i++){
     	 int K;
	 cin >> K;
	 
	 clothes[i].resize(K);
	 for (int j=0; j<K; k++)
	     cin >> clothes[i][j];
     }
}

int main(){
    init();
}
{% endhighlight %}